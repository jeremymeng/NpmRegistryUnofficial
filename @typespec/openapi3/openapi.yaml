openapi: 3.0.0
info:
  title: Unofficial NPM Registy Service Client
  version: 0.0.1
  description: NPM registry service
tags: []
paths:
  /-/v1/search:
    get:
      operationId: Search_search
      parameters:
        - name: text
          in: query
          required: false
          schema:
            type: string
        - name: size
          in: query
          required: false
          schema:
            type: integer
            format: int8
        - name: from
          in: query
          required: false
          schema:
            type: integer
            format: int8
        - name: quality
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: popularity
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: maintenance
          in: query
          required: false
          schema:
            type: number
            format: float
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  objects:
                    type: array
                    items:
                      $ref: '#/components/schemas/PackageSearchResult'
                    x-typespec-name: PackageSearchResult[]
                  total:
                    type: integer
                    format: int64
                  time:
                    type: string
                required:
                  - objects
                  - total
                  - time
                x-typespec-name: Search.(anonymous model)
  /{name}:
    get:
      operationId: Packages_getPackage
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Package'
  /{name}/{version}:
    get:
      operationId: Packages_getPackageVersion
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: version
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageVersion'
components:
  schemas:
    Author:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        url:
          type: string
      required:
        - name
        - email
    Dist:
      type: object
      properties:
        shasum:
          type: string
        tarball:
          type: string
      required:
        - shasum
        - tarball
    DistTag:
      type: object
      properties:
        latest:
          type: string
        dev:
          type: string
        next:
          type: string
        beta:
          type: string
      allOf:
        - type: object
          additionalProperties:
            type: string
          x-typespec-name: Record<string>
      additionalProperties:
        type: string
    Package:
      type: object
      properties:
        _id:
          type: string
        _rev:
          type: string
        name:
          type: string
        description:
          type: string
        dist-tags:
          $ref: '#/components/schemas/DistTag'
        versions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/PackageVersion'
          x-typespec-name: Record<PackageVersion>
        time:
          $ref: '#/components/schemas/PackageTime'
        author:
          $ref: '#/components/schemas/Author'
        keywords:
          type: array
          items:
            type: string
          x-typespec-name: string[]
        repository:
          $ref: '#/components/schemas/Repository'
        readme:
          type: string
      required:
        - _id
        - _rev
        - name
        - description
        - dist-tags
        - repository
        - readme
    PackageSearchResult:
      type: object
      properties:
        score:
          $ref: '#/components/schemas/SearchResultScore'
      required:
        - score
      allOf:
        - $ref: '#/components/schemas/Package'
    PackageTime:
      type: object
      properties:
        created:
          type: string
        modified:
          type: string
      required:
        - created
        - modified
    PackageVersion:
      type: object
      properties:
        name:
          type: string
        version:
          type: string
        homepage:
          type: string
        repository:
          $ref: '#/components/schemas/Repository'
        dependencies:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/object'
          x-typespec-name: Record<object>
        devDependencies:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/object'
          x-typespec-name: Record<object>
        scripts:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/object'
          x-typespec-name: Record<object>
        author:
          $ref: '#/components/schemas/Author'
        license:
          type: string
        readme:
          type: string
        readmeFilename:
          type: string
        _id:
          type: string
        description:
          type: string
        dist:
          $ref: '#/components/schemas/Dist'
        _npmVersion:
          type: string
        _npmUser:
          $ref: '#/components/schemas/Author'
        maintainers:
          type: array
          items:
            $ref: '#/components/schemas/Author'
          x-typespec-name: Author[]
      required:
        - name
        - version
        - homepage
        - repository
        - dependencies
        - devDependencies
        - scripts
        - author
        - license
        - readme
        - readmeFilename
        - _id
        - description
        - dist
        - _npmVersion
        - _npmUser
        - maintainers
    Repository:
      type: object
      properties:
        type:
          type: string
        url:
          type: string
      required:
        - type
        - url
    ScoreDetail:
      type: object
      properties:
        quality:
          type: number
          format: float
        popularity:
          type: number
          format: float
        maintenance:
          type: number
          format: float
      required:
        - quality
        - popularity
        - maintenance
    SearchResultScore:
      type: object
      properties:
        final:
          type: number
          format: float
        detail:
          $ref: '#/components/schemas/ScoreDetail'
      required:
        - final
        - detail
    object:
      type: object
      properties: {}
servers:
  - url: https://registry.npmjs.com
    description: single server endpoint
    variables: {}
